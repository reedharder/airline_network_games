##general parameters
#merge HP and UA data (assume they are suffieciently allied)
merge_HP = True
#maximum competitors in a market to model
max_competitors = 3
#specific markets to ignore in airport network
ignore_mkts = [] 
#daily frequency minimum for inclusion of carrier-segment
freq_cuttoff = 2
#market share minimum for inclusion of carrier-segment
ms_cuttoff = .1
#minimum frequency share for inclusion of carrier-segment
fs_cuttoff = .1
#only use consider subset of carriers, given in 'carriers_of_interest' variable
only_big_carriers = False
#use this subset of carriers if 'only_big_carriers' is True
carriers_of_interest = ['AS','UA','US','WN']
#include regional carriers in game
include_regional_carriers = True
#use lower bound on F based on frequency ###CLARIFY THIS###########
use_lower_F_bound = True
# when filtering by individual craft, remove rarely used from count, based on below daily frequency
craft_freq_cuttoff = .1


##BTS data files to use
#T100 segments file to use
t100_fn = bts_data/T100_%YEAR%.csv
#schedule p52 financials, need ['AIRCRAFT_TYPE','UNIQUE_CARRIER','TOT_AIR_OP_EXPENSES', 'TOTAL_AIR_HOURS']
p52_fn = bts_data/SCHEDULE_P52_%YEAR%.csv
#AOTP file to use
aotp_fn = bts_data/aotp_march_%YEAR%.csv
#route demands file to use (created with route_demands_estimator.py)
route_demands_fn = bts_data/route_demand_%YEAR%_Q%QUARTER%.csv
b43_fn = bts_data/SCHEDULE_B43_%YEAR%.csv
#aircraft type table
ac_type_fn = bts_data/AIRCRAFT_TYPE_LOOKUP.csv
#supplememtary aircraft lookup dict
ac_lookup_dict = bts_data/ac_lookup_dict_%YEAR%.pickle

##nonstop_market_profile output files 
#primary filename of all carrier-segment data 
t100ranked_output_fn = processed_data/nonstop_competitive_markets_%SESSION_ID%.csv
#intermediate carrier segment file seperated by aircraft type and unidirectional market\
t100_summed_fn = processed_data/t100_summed_%SESSION_ID%.csv
#intermediate carrier segment file seperated by aircraft type 
t100_craft_avg_fn=processed_data/t100_craft_avg_%SESSION_ID%.csv
#cost and freq by market, carrier, aircraft type
t100_avgd_fn= processed_data/t100_avgd_%SESSION_ID%.csv

##get market connection modifiers
#new carrier segment data file with modified market sizes, according to connecting passengers
t100ranked_mktmod_output_fn = processed_data/nonstop_competitive_markets_mktmod_%SESSION_ID%.csv


##Ftable_new output file: where to save airline fleet data
ftable_output_fn = processed_data/fleet_lookup_%SESSION_ID%.csv
turnaround = 30

##fleet_assign inputs
#minimum carrier-segment coverage by hybrid aircraft type
assign_min_score = 0.95
#maximum number of partitions in an aircraft's fleet 
assign_max_partitions = 3 
#maximum number of craft to try partitioning
assign_max_partition_set = 11

##fleet_assign outputs
#fleet assignment data
fleetdist_output_fn= processed_data/fleetdist_%SESSION_ID%.csv
#airtimes data 
airtimes_fn_out=processed_data/airtimes_%SESSION_ID%.csv

##create_network_game_datatable parameters
#player data output file
network_game_output_fn = processed_data/carrier_data_%SESSION_ID%.txt
#payoff coefficient output file
coef_outfile = processed_data/transcoef_table_%SESSION_ID%.csv
#use t100ranked market data with market sizes adjusted for connections, or not?
use_adj_market = True

##output file create_SPSA_datamat
SPSA_outfile_fn = processed_data/SPSAdatamat_%SESSION_ID%.csv